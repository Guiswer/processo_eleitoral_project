"""

/**************************************/
/* Aluno: Guilherme Leandro - G773616 */
/* TURMA: CC2A13		      */
/* Profa. Eliane 		      */
/**************************************/

"""

import os #Library para identificar o OS (utilizar comando 'clear')
import time #Library para trabalhar com contagens


#Fun√ß√£o para limpar o terminal
def limpar_terminal():
    if os.name == 'posix':  #Linux e macOS
        os.system('clear')
    elif os.name == 'nt':  #Windows
        os.system('cls')

print("Inicializando a Urna Eletr√¥nica... üáßüá∑")
time.sleep(3) #adicionando 3 segundos de espera 
limpar_terminal() #chamando fun√ß√£o que apaga o terminal

#Identifica√ß√£o da Se√ß√£o e Zona Eleitoral
se√ß√£o = "0129"
zona_eleitoral = "546"

#C√≥digo de Identifica√ß√£o da Urna Eletr√¥nica
c√≥digo_identifica√ß√£o_ue = "jvf302"

#Total de eleitores esperados
eleitores_esperados = 50

#Exibindo dados de identifica√ß√£o da Urna Eletr√¥nica
print(f""" 
* Identifica√ß√£o da Urna Eletr√¥nica *

Se√ß√£o: {se√ß√£o}
Zona eleitoral: {zona_eleitoral}
Total de eleitores(as) esperados: {eleitores_esperados}

  """)

#Status do sistema
print("\nIniciando processo de vota√ß√£o...")

time.sleep(2)

print("\nTudo pronto para o processo! ‚úÖ\n") #Status do sistema
input("Pressione 'ENTER' para iniciar...")

time.sleep(0.2) #adicionando 0.2s de espera

limpar_terminal() #apagando terminal

#Definindo dicion√°rios para contabilizar o total de votos
total_prefeito = {"C1": 0,  "C2": 0, "C3": 0, "C4": 0}

total_vereador = {"V1": 0, "V2": 0, "V3": 0, "V4": 0}


#Definindo vari√°veis pr√©-existentes para receber os inputs e previnir erros de "vari√°vel n√£o definida"
vota√ß√£o_prefeito = ''
vota√ß√£o_vereador = ''

#Valores pr√©-existentes

#aptos a voto (pessoas que votaram)
apto = 0 

#Votos para os partidos
pdb = 0 
psb = 0


#Votos brancos e nulos Prefeito
votos_brancos_prefeito = 0
votos_nulos_prefeito = 0

#Votos brancos e nulos vereador
votos_brancos_vereador = 0
votos_nulos_vereador = 0

#Tirar valores dos partidos caso o user desejar refazer o processo
tirar_pdb = 0
tirar_psb = 0

#Auxiliadores das vari√°veis "tirar"
tirar_pdb_aux = 0
tirar_psb_aux = 0

#Processo de vota√ß√£o
while True: 

	#Garantindo que o input seja inteiro, se not int() = idade inv√°lida
	try:
		idade = int(input("Por favor, digite sua idade: "))
	except ValueError:
	    print("\n * Idade inv√°lida * ")
	    print("\nIdade inv√°lida. Por favor digite corretamente a sua idade üòä")
	    time.sleep(5) #5 segundos de espera

	    limpar_terminal()
	    continue #continuar a execu√ß√£o "n√£o pare"  
	    
	time.sleep(1) #adicionando 1s de espera para apagar o terminal
	limpar_terminal() #apagando o terminal

	if idade == 2023: #Condi√ß√£o para o encerramento do programa, apenas para administradores das m√°quinas
		break
	elif idade >= 16 and idade <= 115: #se existe algu√©m com 115 anos.
		apto = apto + 1 

		#print com aspas triplas para o conte√∫do ser exibido do mesmo jeito que foi escrito no editor
		print("""
Op√ß√µes de voto para PREFEITOS:

C1: Candidato 1 
C2: Candidato 2
C3: Candidato 3
C4: Candidato 4
VB: Voto BRANCO ‚ö™
VN: Voto NULO ‚ö´
""")
		vota√ß√£o_prefeito = input("Digite a sigla de seu candidato a prefeito ou outra op√ß√£o: ")

		#match case para contabilizar os votos para os partidos PREFEITO
		match vota√ß√£o_prefeito:
			case "C1":
				pdb += 1
				tirar_pdb += 1 #Caso op√ß√£o (2) devemos remover os votos para os partidos
			case "C2":
				pdb += 1 
				tirar_pdb += 1
			case "C3":
				psb += 1
				tirar_psb += 1
			case "C4":
				psb += 1
				tirar_psb += 1 

		#O eleitor deve digitar corretamente a sigla de seu candidato
		while vota√ß√£o_prefeito != "C1" and vota√ß√£o_prefeito != "C2" and vota√ß√£o_prefeito != "C3" and vota√ß√£o_prefeito != "C4" and vota√ß√£o_prefeito != "VB" and vota√ß√£o_prefeito != "VN":
			print("\n* Escolha inv√°lida, o processo est√° reiniciando.. *\n")
			print("Por favor, digite corretamente a sua op√ß√£o üòä \n")

			time.sleep(5)
			limpar_terminal()

			print("""
Op√ß√µes de voto para PREFEITOS:

C1: Candidato 1 
C2: Candidato 2
C3: Candidato 3
C4: Candidato 4
VB: Voto BRANCO ‚ö™
VN: Voto NULO ‚ö´
""")

			vota√ß√£o_prefeito = input("Digite a sigla de seu candidato a PREFEITO, ou outra op√ß√£o: ")
		print("\nSeu voto foi cadastrado! ‚úÖ")

		time.sleep(2)
		limpar_terminal()

		#print com aspas triplas para o conte√∫do ser exibido do mesmo jeito que foi escrito no editor
		print(""" \n
Op√ß√µes de voto para VEREADORES: 

V1: Candidato 1 
V2: Candidato 2
V3: Candidato 3
V4: Candidato 4
VB: Voto BRANCO ‚ö™
VN: Voto NULO ‚ö´
""")
		vota√ß√£o_vereador = input("Digite a sigla de seu candidato a VEREADOR, ou outra op√ß√£o: ")

		#match case para contabilizar os votos para os partidos VEREADOR
		match vota√ß√£o_vereador:
			case "V1":
				pdb += 1
				tirar_pdb += 1 #Caso op√ß√£o (2) devemos remover os votos para os partidos
			case "V2":
				pdb += 1
				tirar_pdb += 1 
			case "V3":
				psb += 1
				tirar_psb += 1
			case "V4":
				psb += 1
				tirar_psb += 1

		#O eleitor deve digitar corretamente a sigla de seu candidato
		while vota√ß√£o_vereador != "V1" and vota√ß√£o_vereador != "V2" and vota√ß√£o_vereador != "V3" and vota√ß√£o_vereador != "V4" and vota√ß√£o_vereador != "VB" and vota√ß√£o_vereador != "VN":
			print("\n* Escolha inv√°lida, o processo est√° reiniciando.. *\n")
			print("Por favor, digite corretamente a sua op√ß√£o üòä \n")

			time.sleep(5)
			limpar_terminal()

			print(""" \n
Op√ß√µes de voto para VEREADORES: 

V1: Candidato 1 
V2: Candidato 2
V3: Candidato 3
V4: Candidato 4
VB: Voto BRANCO ‚ö™
VN: Voto NULO ‚ö´
""")

			vota√ß√£o_vereador = input("Digite a sigla de seu candidato a vereador ou outra op√ß√£o: ")

		time.sleep(2)
		limpar_terminal()

		print("\n* Seus votos j√° foram cadastrados! * ‚úÖ\n") #primeira heur√≠stica de Nilsen
		

	elif idade < 16 and idade > 0:
		print("\nInapto a vota√ß√£o. Aguarde at√© completar 16 (dezesseis) anos üòä")
		
	else:
		print("\nIdade inv√°lida. Por favor digite corretamente a sua idade üòä")

	if idade >= 16 and idade <= 115:
		print("\nVoto para prefeito:", vota√ß√£o_prefeito)
		print("Voto para vereador:", vota√ß√£o_vereador)


	elif idade < 16:
		verificar = 1
		print("\nProcesso encerrado!")

	print("\nAguarde alguns instantes...")
	print("\nEstamos computando seus dados... üòä")

	time.sleep(12) #12 segundos para a urna "computar"
	limpar_terminal()

	while True:
		if idade < 16 or idade > 115:
			break
		#Op√ß√µes para o eleitor prosseguir com o processo ou se deseja refaz√™-lo
		try:
			verificar = int(input("\nDigite (1) para confirmar suas escolhas, ou digite (2) se deseja anular suas escolhas e refazer o processo: "))
		except ValueError:
			verificar = 1
			print("\n* Por favor, digite uma op√ß√£o v√°lida *")
			continue #Continuar loop at√© o usu√°rio digitar a op√ß√£o correta

		if verificar == 2:
			print("\nN√£o se preocupe, iremos reiniciar o seu processo de vota√ß√£o üòä\n")
			if idade >= 16:

				#Cuidando de erros de contabilidade dos votos para partidos PDB
				if vota√ß√£o_prefeito == "C1" or vota√ß√£o_prefeito == "C2" or vota√ß√£o_vereador == "V1" or vota√ß√£o_vereador == "V2" and pdb > 0:
					pdb -= tirar_pdb #Se op√ß√£o 2, ent√£o - tiramos pontos dos partidos

				#Cuidando de erros de contabilidade dos votos para partidos PSB
				elif vota√ß√£o_prefeito == "C3" or vota√ß√£o_prefeito == "C4" or vota√ß√£o_vereador == "V3" or vota√ß√£o_vereador == "V4" and psb > 0:
					psb -= tirar_psb #Se op√ß√£o 2, ent√£o - tiramos pontos dos partidos


				try:
					#para anular as escolhas - o total_prefeito simplesmente n√£o recebe nada
					total_prefeito[vota√ß√£o_prefeito] += 0
					total_vereador[vota√ß√£o_vereador] += 0
				except KeyError:
					votos_brancos_prefeito += 0
					votos_brancos_vereador += 0
					continue
				break		
			else:
				#previnir erros para menores
				None

		elif verificar == 1:

			tirar_pdb = 0 
			tirar_psb = 0
			print("\nO processo foi devidamente conclu√≠do! ‚úÖ")
			if idade >= 16:

				#try para o prefeito
				#o VB e VN n√£o est√£o no dicion√°rio como tamb√©m n√£o podem ser candidatos
				try:
					total_prefeito[vota√ß√£o_prefeito] += 1
				except KeyError:
					if vota√ß√£o_prefeito == 'VB':
						votos_brancos_prefeito += 1
					elif vota√ß√£o_prefeito == 'VN':
						votos_nulos_prefeito += 1
				
				#try para o vereador
				#o VB e VN n√£o est√£o no dicion√°rio como tamb√©m n√£o podem ser candidatos
				try:
					total_vereador[vota√ß√£o_vereador] += 1
				except KeyError:
					if vota√ß√£o_vereador == 'VB':
						votos_brancos_vereador += 1
					elif vota√ß√£o_vereador == 'VN':
						votos_nulos_vereador += 1
				break
			else:
				#previnir erros para menores
				None
				break

		else:
			print("Op√ß√£o inv√°lida")	


	print("\nPressione 'ENTER' encerrar sua sess√£o.")
	confirmar = input()
	limpar_terminal()


# * Vota√ß√£o (de uma Se√ß√£o Eleitoral) *

#IDENTIFICA√á√ÉO DA URNA ELETR√îNICA
print("\nSe√ß√£o:", se√ß√£o, "\nZona eleitoral:", zona_eleitoral,"\n")
print("C√≥digo de Identifica√ß√£o da Urna Eletr√¥nica:",c√≥digo_identifica√ß√£o_ue,"\n")

#Quantos eleitores podem votar
print("Total dos Eleitores que podem votar:",apto,"\n")

#decora√ß√£o
print("\nx-------------------------------------------------------------------x\n")

# * Totaliza√ß√£o
print(" üö® Ranking das elei√ß√µes! üö® \n")
print("Rank dos prefeitos:", total_prefeito, "\n")
print("Rank dos vereadores:", total_vereador)


# * Divulga√ß√£o dos Resultados *


#Candidato a Prefeito mais votado

#Vari√°veis para auxiliar a contagem

#Prefeito
lista_total_prefeito = []

#Colocando os elementos da lista em ordem crescente
lista_total_prefeito = sorted(total_prefeito.items(), key = lambda x: x[1]) #lambda para extrair o segundo elemento de cada tupla

#Vereador
lista_total_vereador = []

#Colocando os elementos da lista em ordem crescente
lista_total_vereador = sorted(total_vereador.items(), key = lambda x: x[1]) #lambda para extrair o segundo elemento de cada tupla

#decora√ß√£o
print("\nx-------------------------------------------------------------------x")

#Mostrando votos por patido
print("\nN√∫mero de votos para o partido PDB:", pdb,"\n")
print("N√∫mero de votos para o partido PSB:", psb,"\n")

#decora√ß√£o
print("x-------------------------------------------------------------------x")

#Verificando poss√≠vel empate
#Condi√ß√£o de empate duplo
if lista_total_prefeito[-1][1] == lista_total_prefeito[-2][1] and lista_total_prefeito[-1][1] != 0 and lista_total_prefeito[-2][1] != 0:
	print(f"\nHouve um empate entre os candidatos a prefeito {lista_total_prefeito[-1]} e {lista_total_prefeito[-2]} e haver√° um segundo turno!")

#Condi√ß√£o de empate triplo
elif lista_total_prefeito[-1][1] == lista_total_prefeito[-2][1] and lista_total_prefeito[-2][1] == lista_total_prefeito[-3][1] and lista_total_prefeito[-1][1] != 0 and lista_total_prefeito[-2][1] != 0 and lista_total_prefeito[-3][1] != 0:
	print(f"\nHouve um empate entre os candidatos a prefeito {lista_total_prefeito[-1]}, {lista_total_prefeito[-2]} e {lista_total_prefeito[-3]} e haver√° um segundo turno!")

#Caso o usu√°rio somente digite votos BRANCOS ou NULOS - mostrar que houve um "equivoco"
elif lista_total_prefeito[-1][1] == 0:
	print(' üö® Houve um "equ√≠voco" nas elei√ß√µes dos prefeitos, e haver√° um novo turno üö® ')

else:
	#resultados das vota√ß√µes para prefeito
	print("\nüî∞ Candidato a Prefeito mais votado:", lista_total_prefeito[-1])


print("\n‚ö™ Votos Brancos na vota√ß√£o para Prefeitos:", votos_brancos_prefeito)	
print("‚ö´ Votos Nulos na vota√ß√£o para Prefeitos:", votos_nulos_prefeito)

#decora√ß√£o
print("\nx-------------------------------------------------------------------x")

#Condi√ß√£o de empate duplo
if lista_total_vereador[-1][1] == lista_total_vereador[-2][1] and lista_total_vereador[-1][1] != 0 and lista_total_vereador[-2][1] != 0:
	print(f"\nHouve um empate entre os candidatos a vereador {lista_total_vereador[-1]} e {lista_total_vereador[-2]} e haver√° um segundo turno!")

#Condi√ß√£o de empate triplo
elif lista_total_vereador[-1][1] == lista_total_vereador[-2][1] and lista_total_vereador[-2][1] == lista_total_vereador[-3][1] and lista_total_vereador[-1][1] != 0 and lista_total_vereador[-2][1] != 0 and lista_total_vereador[-3][1] != 0:
	print(f"\nHouve um empate entre os candidatos a prefeito {lista_total_vereador[-1]}, {lista_total_vereador[-2]} e {lista_total_vereador[-3]} e haver√° um segundo turno!")

#Caso o usu√°rio somente digite votos BRANCOS ou NULOS - mostrar que houve um "equivoco"
elif lista_total_vereador[-1][1] == 0:
	print('\n üö® Houve um "equ√≠voco" nas elei√ß√µes dos vereadores, e haver√° um novo turno üö® ')

else: 
	#resultados das vota√ß√µes para vereador
	print("\nüî∞ Candidato a Vereador mais votado:", lista_total_vereador[-1])


print("\n‚ö™ Votos Brancos na vota√ß√£o para Vereador:", votos_brancos_vereador)
print("‚ö´ Votos Nulos na vota√ß√£o para Vereador:", votos_nulos_vereador)


#Fim do programa
#Aproximadamente 26 horas de desenvolvimento