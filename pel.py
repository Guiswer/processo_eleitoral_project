"""
Aluno: Guilherme Leandro - RA: G773616	 
TURMA: CC2A13 
Profa. Eliane 
"""

import os #Library para identificar o OS (utilizar comando 'clear')


#Identifica√ß√£o da Se√ß√£o e Zona Eleitoral
Se√ß√£o = "0129"
Zona_Eleitoral = "546"

#C√≥digo de Identifica√ß√£o da Urna Eletr√¥nica
C√≥digo_Identifica√ß√£o_UE = "jvf302"


#Definindo dicion√°rios para contabilizar o total de votos
total_prefeito = {"C1": 0,  "C2": 0, "C3": 0, "C4": 0}

total_vereador = {"V1": 0, "V2": 0, "V3": 0, "V4": 0}


#Fun√ß√£o para limpar o terminal
def limpar_terminal():
    if os.name == 'posix':  #Linux e macOS
        os.system('clear')
    elif os.name == 'nt':  #Windows
        os.system('cls')

#Definindo vari√°veis para receber os inputs
vota√ß√£o_prefeito = ''
vota√ß√£o_vereador = ''

#Valores pr√©-existentes

apto = 0 

#Votos brancos e nulos Prefeito
votos_brancos_prefeito = 0
votos_nulos_prefeito = 0

#Votos brancos e nulos vereador
votos_brancos_vereador = 0
votos_nulos_vereador = 0


#Processo de vota√ß√£o
while True: 

	#Garantindo que o input seja inteiro, se not int() = idade inv√°lida
	try:
		idade = int(input("Digite sua idade: "))
	except ValueError:
	    print("\n * Idade inv√°lida * \n")
	    continue #continuar a execu√ß√£o "n√£o pare"  
	    
	if idade == 2023: #Condi√ß√£o para o encerramento do programa, apenas para administradores das m√°quinas
		break
	elif idade >= 16 and idade <= 115: #se existe algu√©m com 115 anos.
		apto = apto + 1 

		#print com aspas triplas para o conte√∫do ser exibido do mesmo jeito que foi escrito no editor
		print("""
Op√ß√µes de voto para PREFEITOS:

C1: Candidato 1 
C2: Candidato 2
C3: Candidato 3
C4: Candidato 4
VB: Voto BRANCO
VN: Voto NULO
""")
		vota√ß√£o_prefeito = input("Digite a sigla de seu candidato a prefeito ou outra op√ß√£o: ")

		#O eleitor deve digitar corretamente a sigla de seu candidato
		while vota√ß√£o_prefeito != "C1" and vota√ß√£o_prefeito != "C2" and vota√ß√£o_prefeito != "C3" and vota√ß√£o_prefeito != "C4" and vota√ß√£o_prefeito != "VB" and vota√ß√£o_prefeito != "VN":
			print("\n* Escolha inv√°lida *\n")
			vota√ß√£o_prefeito = input("Digite a sigla de seu candidato a PREFEITO, ou outra op√ß√£o: ")
		print("\nO voto foi cadastrado!")

		#print com aspas triplas para o conte√∫do ser exibido do mesmo jeito que foi escrito no editor
		print(""" \n
Op√ß√µes de voto para VEREADORES: 

V1: Candidato 1 
V2: Candidato 2
V3: Candidato 3
V4: Candidato 4
VB: Voto BRANCO
VN: Voto NULO
""")
		vota√ß√£o_vereador = input("Digite a sigla de seu candidato a VEREADOR, ou outra op√ß√£o: ")

		#O eleitor deve digitar corretamente a sigla de seu candidato
		while vota√ß√£o_vereador != "V1" and vota√ß√£o_vereador != "V2" and vota√ß√£o_vereador != "V3" and vota√ß√£o_vereador != "V4" and vota√ß√£o_vereador != "VB" and vota√ß√£o_vereador != "VN":
			print("\n* Escolha inv√°lida *\n")
			vota√ß√£o_vereador = input("Digite a sigla de seu candidato a vereador ou outra op√ß√£o: ")
		print("\n* Seus votos j√° foram cadastrados! üôÇ *\n") #primeira heur√≠stica de Nilsen
		
	elif idade < 16 and idade > 0:
		print("\nInapto a vota√ß√£o. Aguarde at√© completar 16 (dezesseis) anos.\n")
		
	else:
		print("\nIdade inv√°lida.")

	if idade >= 16 and idade <= 115:
		print("\nVoto para prefeito:", vota√ß√£o_prefeito)
		print("Voto para vereador:", vota√ß√£o_vereador)
		#Op√ß√µes para o eleitor prosseguir com o processo ou se deseja refaz√™-lo
		verificar = int(input("\nDigite (1) para confirmar suas escolhas, ou digite (2) se deseja anular suas escolhas e refazer o processo. "))
	elif idade < 16:
		verificar = 1
		print("\nProcesso encerrado!")

	if verificar == 2:
		if idade >= 16:
			try:
				print("Dentro do bloco try")
				#para anular as escolhas - o total_prefeito simplesmente n√£o recebe nada
				total_prefeito[vota√ß√£o_prefeito] += 0
				total_vereador[vota√ß√£o_vereador] += 0
			except KeyError:
				print("Dentro do bloco except")
				votos_brancos_prefeito += 0
				votos_brancos_vereador += 0
				continue	
		else:
			#previnir erros para menores
			None

	elif verificar == 1:
		if idade >= 16:

			#try para o prefeito
			#o VB e VN n√£o est√£o no dicion√°rio como tamb√©m n√£o podem ser candidatos
			try:
				total_prefeito[vota√ß√£o_prefeito] += 1
			except KeyError:
				if vota√ß√£o_prefeito == 'VB':
					votos_brancos_prefeito += 1
				elif vota√ß√£o_prefeito == 'VN':
					votos_nulos_prefeito += 1

			#try para o vereador
			#o VB e VN n√£o est√£o no dicion√°rio como tamb√©m n√£o podem ser candidatos
			try:
				total_vereador[vota√ß√£o_vereador] += 1
			except KeyError:
				if vota√ß√£o_vereador == 'VB':
					votos_brancos_vereador += 1
				elif vota√ß√£o_vereador == 'VN':
					votos_nulos_vereador += 1


		else:
			#previnir erros para menores
			None
	else:
		print("Op√ß√£o inv√°lida")	

	print("\nPressione 'ENTER' encerrar sua sess√£o.")
	confirmar = input()
	limpar_terminal()


# * Vota√ß√£o (de uma Se√ß√£o Eleitoral) *

#IDENTIFICA√á√ÉO DA URNA ELETR√îNICA
print("\nSe√ß√£o:", Se√ß√£o, "\nZona eleitoral:", Zona_Eleitoral,"\n")
print("C√≥digo de Identifica√ß√£o da Urna Eletr√¥nica:",C√≥digo_Identifica√ß√£o_UE,"\n")

#Quantos eleitores podem votar
print("Total dos Eleitores que podem votar:",apto,"\n")


# * Totaliza√ß√£o
print(total_prefeito)
print(total_vereador)


# * Divulga√ß√£o dos Resultados


#Candidato a Prefeito mais votado

#Vari√°veis para auxiliar a contagem

#Prefeito
lista_total_prefeito = []

#Colocando os elementos da lista em ordem crescente
lista_total_prefeito = sorted(total_prefeito.items(), key = lambda x: x[1]) #lambda para extrair o segundo elemento de cada tupla

#Vereador
lista_total_vereador = []

#Colocando os elementos da lista em ordem crescente
lista_total_vereador = sorted(total_vereador.items(), key = lambda x: x[1]) #lambda para extrair o segundo elemento de cada tupla


#Verificando poss√≠vel empate
if lista_total_prefeito[-1][1] == lista_total_prefeito[-2][1] and lista_total_prefeito[-1][1] != 0 and lista_total_prefeito[-2][1] != 0:
	print(f"\nHouve um empate entre os candidatos a prefeito {lista_total_prefeito[-1]} e {lista_total_prefeito[-2]} e haver√° um segundo turno!")

#Caso o usu√°rio somente digite votos BRANCOS ou NULOS - mostrar que houve um "equivoco"
elif lista_total_prefeito[-1][1] == 0:
	print('Houve um "equivoco nas elei√ß√µes", haver√° um novo turno.')

else:
	#resultados das vota√ß√µes para prefeito
	print("\nCandidato a Prefeito mais votado:", lista_total_prefeito[-1])


print("\nVotos Brancos na vota√ß√£o para Prefeitos:", votos_brancos_prefeito)	
print("Votos Nulos na vota√ß√£o para Prefeitos:", votos_nulos_prefeito)

print("x-------------------------------------------------------------------x")

if lista_total_vereador[-1][1] == lista_total_vereador[-2][1] and lista_total_vereador[-1][1] != 0 and lista_total_vereador[-2][1] != 0:
	print(f"\nHouve um empate entre os candidatos a vereador {lista_total_vereador[-1]} e {lista_total_vereador[-2]} e haver√° um segundo turno!")

#Caso o usu√°rio somente digite votos BRANCOS ou NULOS - mostrar que houve um "equivoco"
elif lista_total_vereador[-1][1] == 0:
	print('\n * Houve um "equivoco nas elei√ß√µes", haver√° um novo turno * ')

else: 
	#resultados das vota√ß√µes para vereador
	print("\nCandidato a Vereador mais votado:", lista_total_vereador[-1])


print("\nVotos Brancos na vota√ß√£o para Vereador:", votos_brancos_vereador)
print("Votos Nulos na vota√ß√£o para Vereador:", votos_nulos_vereador)
